{-# OPTIONS --copatterns --rewriting --no-positivity-check  #-}

module Postulates4 where

open import Data.Product
open import Data.Nat
open import Data.Unit
open import Relation.Binary.PropositionalEquality hiding ([_])
open โก-Reasoning
open import Function renaming (id to idf ; _โ_ to _fโ_)
{-# BUILTIN REWRITE _โก_ #-}

postulate
  funext : {A : Set } {B : A โ Set} {f g : (x : A) โ B x} โ (โ x โ f x โก g x) โ f โก g
  
mapโก : {A B : Set} (f : A โ B) โ โ{x y} โ x โก y โ f x โก f y
mapโก f refl = refl
symโก : {A : Set} โ {x y : A} โ x โก y โ y โก x
symโก refl = refl

--=================================
--CONTEXTS, SUBSTITUTIONS AND TYPES
--=================================

data Variance : Set where
  # : Variance
  โญ : Variance

data Endpoint : Set where
  src : Endpoint
  tgt : Endpoint

postulate
  Var : Set -- set of variables; if you prefer to ignore variables, think of this as Unit
  IVar : Set -- same, but for the interval
  CtxVar : Set -- set of context variables.
  AbsTy : CtxVar โ Set -- Think of this as TyDisc(#ฮฉ)
  AbsTm : (ฮฆ : CtxVar) โ (T : AbsTy ฮฆ) โ Variance โ Set -- Think of this as the set of terms ฮฉ โข T ^ v
  Abs๐น : CtxVar โ Variance โ Set -- Think of this as the set of presheaf maps ฮฉ โ ๐น
  ฮนatm : โ{ฮฆ T} โ AbsTm ฮฆ T โญ โ AbsTm ฮฆ T #
  ฮน๐น : โ{ฮฆ} โ Abs๐น ฮฆ โญ โ Abs๐น ฮฆ #
  end๐น : โ{ฮฆ} โ Endpoint โ Abs๐น ฮฆ โญ
  _tโฅi_ : โ{ฮฆ T} โ AbsTm ฮฆ T # โ Abs๐น ฮฆ # โ Set
  _iโฅi_ : โ{ฮฆ} โ (ai aj : Abs๐น ฮฆ #) โ Set
  iโฅi-sym : โ{ฮฆ} โ {ai aj : Abs๐น ฮฆ #} โ ai iโฅi aj โ aj iโฅi ai
  tโฅend : โ{ฮฆ T e} โ {at : AbsTm ฮฆ T #} โ at tโฅi ฮน๐น (end๐น e)
  iโฅend : โ{ฮฆ e} โ {ai : Abs๐น ฮฆ #} โ ai iโฅi ฮน๐น (end๐น e)

ฮน'atm : โ{v ฮฆ T} โ AbsTm ฮฆ T v โ AbsTm ฮฆ T #
ฮน'atm {โญ} at = ฮนatm at
ฮน'atm {#} at = at

ฮบ'atm : โ{v ฮฆ T} โ AbsTm ฮฆ T โญ โ AbsTm ฮฆ T v
ฮบ'atm {#} at = ฮนatm at
ฮบ'atm {โญ} at = at

ฮน'๐น : โ{v ฮฆ} โ Abs๐น ฮฆ v โ Abs๐น ฮฆ #
ฮน'๐น {โญ} i = ฮน๐น i
ฮน'๐น {#} i = i

ฮบ'๐น : โ{v ฮฆ} โ Abs๐น ฮฆ โญ โ Abs๐น ฮฆ v
ฮบ'๐น {#} i = ฮน๐น i
ฮบ'๐น {โญ} i = i

ฮน'๐นโฮบ'๐น : โ{v ฮฆ} โ {i : Abs๐น ฮฆ โญ} โ ฮน'๐น (ฮบ'๐น {v} i) โก ฮน๐น i
ฮน'๐นโฮบ'๐น {#} = refl
ฮน'๐นโฮบ'๐น {โญ} = refl
{-# REWRITE ฮน'๐นโฮบ'๐น #-}

_iโฅt_ : โ{ฮฆ T} โ Abs๐น ฮฆ # โ AbsTm ฮฆ T # โ Set
ai iโฅt at = at tโฅi ai

data Ctx : Set
c# : Ctx โ Ctx
postulate
  c## : โ{ฮ} โ c# (c# ฮ) โก c# ฮ
{-# REWRITE c## #-}
data AbsSub (ฮฆ : CtxVar) : Ctx โ Set

Sub : Ctx โ Ctx โ Set
Sub ฮ ฮ = (ฮฆ : CtxVar) โ AbsSub ฮฆ ฮ โ AbsSub ฮฆ ฮ
--Think of AbsSub ฮฆ ฮ โ AbsSub ฮฆ ฮ as Sub ฮ ฮ = โ ฮฉ . Sub ฮฉ ฮ โ Sub ฮฉ ฮ

id : โ{ฮ} โ Sub ฮ ฮ
id ฮฆ ฮณ = ฮณ

_โ_ : โ{ฮ ฮ ฮ} โ Sub ฮ ฮ โ Sub ฮ ฮ โ Sub ฮ ฮ
(ฯ โ ฯ) ฮฆ ฮธ = ฯ ฮฆ (ฯ ฮฆ ฮธ)

_โฅi_ : โ{ฮฆ ฮ} โ (ฮณ : AbsSub ฮฆ ฮ) โ (i : Abs๐น ฮฆ #) โ Set
postulate
  ฯโฅi : โ{ฮฆ ฮ ฮ} โ (ฯ : Sub ฮ ฮ) โ (ฮด : AbsSub ฮฆ ฮ) โ {i : Abs๐น ฮฆ #} โ (ฮด โฅi i) โ (ฯ ฮฆ ฮด โฅi i)

Ty : Ctx โ Set
Ty ฮ = (ฮฆ : CtxVar) โ (ฮณ : AbsSub ฮฆ (c# ฮ)) โ AbsTy ฮฆ

data Ctx where
  โข : Ctx --\bu
  _โ_โ_^_ : (ฮ : Ctx) โ Var โ (T : Ty ฮ) โ (v : Variance) โ Ctx
  _!_โ๐น_ : (ฮ : Ctx) โ IVar โ (v : Variance) โ Ctx

c# โข = โข
c# (ฮ โ x โ T ^ v) = c# ฮ โ x โ T ^ #
c# (ฮ ! x โ๐น v) = c# ฮ ! x โ๐น #

cฮน : โ{ฮ} โ Sub ฮ (c# ฮ)
postulate
  cฮน# : โ{ฮ} โ cฮน {c# ฮ} โก id
{-# REWRITE cฮน# #-}
data AbsSub ฮฆ where
  โข : AbsSub ฮฆ โข
  _โ_^_โ_/_ : {ฮ : Ctx} โ (ฮณ : AbsSub ฮฆ ฮ) โ (T : Ty ฮ) โ (v : Variance) โ (t : AbsTm ฮฆ (T ฮฆ (cฮน ฮฆ ฮณ)) v) โ
    (x : Var) โ AbsSub ฮฆ (ฮ โ x โ T ^ v)
  _!๐น_โ_/_&_ : {ฮ : Ctx} โ (ฮณ : AbsSub ฮฆ ฮ) โ (v : Variance) โ (ฮฒ : Abs๐น ฮฆ v) โ (xi : IVar) โ
    .(ฮณ โฅi ฮน'๐น ฮฒ) โ AbsSub ฮฆ (ฮ ! xi โ๐น v)
cฮน {โข} ฮฆ โข = โข
cฮน {ฮ โ .x โ .T ^ .v} ฮฆ (ฮณ โ T ^ v โ t / x) = (cฮน ฮฆ ฮณ) โ T ^ # โ ฮน'atm t / x
cฮน {ฮ ! .xi โ๐น .v} ฮฆ (ฮณ !๐น v โ ฮฒ / xi & o) = (cฮน ฮฆ ฮณ) !๐น # โ (ฮน'๐น ฮฒ) / xi & ฯโฅi cฮน ฮณ o

_โฅi_ {ฮ = โข} ฮณ j = โค
_โฅi_ {ฮ = ฮ โ .x โ .S ^ .v} (ฮณ โ S ^ v โ as / x) aj = (ฮณ โฅi aj) ร (ฮน'atm as tโฅi aj)
_โฅi_ {ฮ = ฮ ! .xi โ๐น .v} (ฮณ !๐น v โ ai / xi & _) aj = (ฮณ โฅi aj) ร (ฮน'๐น ai iโฅi aj)

โฅend : โ{ฮฆ ฮ e} โ (ฮณ : AbsSub ฮฆ ฮ) โ ฮณ โฅi ฮน๐น (end๐น e)
โฅend {ฮ = โข} ฮณ = tt
โฅend {ฮฆ}{ฮ โ .x โ T ^ .v}{e} (ฮณ โ .T ^ v โ t / x) = โฅend ฮณ , tโฅend
โฅend {ฮฆ}{ฮ = ฮ ! .x โ๐น .v}{e} (ฮณ !๐น v โ ฮฒ / x & o) = โฅend ฮณ , iโฅend

infix 10 _โ_^_โ_/_
infix 8 _โ_โ_^_

idโ : โ{ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ id โ ฯ โก ฯ
idโ = refl
โid : โ{ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ ฯ โ id โก ฯ
โid = refl
โโ : โ{ฮ ฮ ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ (ฯ โ ฯ) โ ฯ โก ฯ โ (ฯ โ ฯ)
โโ = refl

postulate
  sub# : โ{ฮ ฮ} โ Sub ฮ ฮ โ Sub (c# ฮ) (c# ฮ)
  sub#-id : โ{ฮ ฮฆ} โ {ฮณ : AbsSub ฮฆ (c# ฮ)} โ sub# id ฮฆ ฮณ โก ฮณ
  sub#-โ : โ{ฮ ฮ ฮ ฮฆ} โ {ฯ : Sub ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ {ฮธ : AbsSub ฮฆ (c# ฮ)}
    โ (sub# ฯ) ฮฆ (sub# ฯ ฮฆ ฮธ) โก sub# (ฯ โ ฯ) ฮฆ ฮธ 
  cฮน-nat : โ{ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ โ{ฮฆ} โ {ฮด : AbsSub ฮฆ ฮ} โ sub# ฯ ฮฆ (cฮน ฮฆ ฮด) โก (cฮน โ ฯ) ฮฆ ฮด
  sub## : โ{ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ sub# (sub# ฯ) โก sub# ฯ
{-# REWRITE sub#-id #-}
{-# REWRITE sub#-โ #-}
{-# REWRITE cฮน-nat #-}
{-# REWRITE sub## #-}

_T[_] : {ฮ ฮ : Ctx} โ Ty ฮ โ Sub ฮ ฮ โ Ty ฮ
T T[ ฯ ] = ฮป ฮฆ โ ฮป ฮด โ T ฮฆ (sub# ฯ ฮฆ ฮด)
subT = _T[_]
T[id] : โ{ฮ} โ {T : Ty ฮ} โ T T[ id ] โก T
T[id] = refl
T[][] : โ{ฮ ฮ ฮ} โ {T : Ty ฮ} โ {ฯ : Sub ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ T T[ ฯ ] T[ ฯ ] โก T T[ ฯ โ ฯ ]
T[][] = refl

--================================
--TERMS AND SUBSTITUTION EXTENSION
--================================
infix 5 _โข_^_
_โข_^_ : (ฮ : Ctx) โ Ty ฮ โ Variance โ Set -- set of terms of T v
ฮ โข T ^ v = (ฮฆ : CtxVar) โ (ฮณ : AbsSub ฮฆ ฮ) โ AbsTm ฮฆ (T ฮฆ (cฮน ฮฆ ฮณ)) v
--Think of this as ฮ โข T = โ ฮฉ . (ฮณ : Sub ฮฉ ฮ) โ ฮฉ โข T[ฮณ]

_โ_[_] : โ{v ฮ ฮ} โ (T : Ty ฮ) โ (ฮ โข T ^ v) โ (ฯ : Sub ฮ ฮ) โ (ฮ โข T T[ ฯ ] ^ v)
T โ t [ ฯ ] = ฮป ฮฆ ฮด โ t ฮฆ (ฯ ฮฆ ฮด)
[id] : โ{v ฮ} โ {T : Ty ฮ} โ {t : ฮ โข T ^ v} โ T โ t [ id ] โก t
[id] = refl
[][] : โ{v ฮ ฮ ฮ} โ {T : Ty ฮ} โ {t : ฮ โข T ^ v} โ {ฯ : Sub ฮ ฮ} โ {ฯ : Sub ฮ ฮ}
  โ (T T[ ฯ ]) โ (T โ t [ ฯ ]) [ ฯ ] โก T โ t [ ฯ โ ฯ ]
[][] = refl
infix 10 _โ_[_]

infix 10 _โ_^_โ_/_ _!๐น_โ_/_
_โ_^_โ_/_ : โ {ฮ ฮ} โ (ฯ : Sub ฮ ฮ) โ (T : Ty ฮ) โ (v : Variance) โ  ฮ โข T T[ ฯ ] ^ v โ (x : Var) โ Sub ฮ (ฮ โ x โ T ^ v)
(ฯ โ T ^ v โ t / x) ฮฆ ฮด = (ฯ ฮฆ ฮด) โ T ^ v โ (t ฮฆ ฮด) / x

_!๐น_โ_/_ : โ {ฮ ฮ} โ (ฯ : Sub ฮ ฮ) โ (v : Variance) โ (e : Endpoint) โ (xi : IVar) โ Sub ฮ (ฮ ! xi โ๐น v)
(ฯ !๐น โญ โ e / xi) ฮฆ ฮด = (ฯ ฮฆ ฮด) !๐น โญ โ ฮบ'๐น (end๐น e) / xi & โฅend (ฯ ฮฆ ฮด)
(ฯ !๐น # โ e / xi) ฮฆ ฮด = (ฯ ฮฆ ฮด) !๐น # โ ฮบ'๐น (end๐น e) / xi & โฅend (ฯ ฮฆ ฮด)

_!id : โ{v ฮ ฮ xi} โ (ฯ : Sub ฮ ฮ) โ Sub (ฮ ! xi โ๐น v) (ฮ ! xi โ๐น v)
(ฯ !id) ฮฆ (ฮด !๐น v โ i / xi & o) = (ฯ ฮฆ ฮด) !๐น v โ i / xi & ฯโฅi ฯ ฮด o

_!u : โ{ฮ ฮ xi} โ (ฯ : Sub ฮ ฮ) โ Sub (ฮ ! xi โ๐น โญ) (ฮ ! xi โ๐น #)
(ฯ !u) ฮฆ (ฮด !๐น .โญ โ i / xi & o) = (ฯ ฮฆ ฮด) !๐น # โ ฮน๐น i / xi & ฯโฅi ฯ ฮด o

--==================================
--FLAT
--==================================

cโญ : Ctx โ Ctx
postulate
  c#โญ : โ{ฮ} โ c# (cโญ ฮ) โก c# ฮ
{-# REWRITE c#โญ #-}
cโญ โข = โข
cโญ (ฮ โ x โ T ^ v) = cโญ ฮ โ x โ T ^ โญ
cโญ (ฮ ! x โ๐น v) = cโญ ฮ ! x โ๐น โญ

cฮบ : โ{ฮ} โ Sub (cโญ ฮ) ฮ
postulate
  cฮนโcฮบ : โ{ฮ ฮฆ} โ {ฮณ : AbsSub ฮฆ (cโญ ฮ)} โ cฮน ฮฆ (cฮบ{ฮ} ฮฆ ฮณ) โก cฮน ฮฆ ฮณ
{-# REWRITE cฮนโcฮบ #-}
cฮบ {โข} ฮฆ โข = โข
cฮบ {ฮ โ .x โ .T ^ v} ฮฆ (ฮณ โ T ^ .โญ โ t / x) = (cฮบ ฮฆ ฮณ) โ T ^ v โ ฮบ'atm t / x
cฮบ {ฮ ! .xi โ๐น v} ฮฆ (ฮณ !๐น .โญ โ ฮฒ / xi & o) = (cฮบ ฮฆ ฮณ) !๐น v โ (ฮบ'๐น ฮฒ) / xi & ฯโฅi cฮบ ฮณ o

postulate
  subโญ : โ{ฮ ฮ} โ Sub ฮ ฮ โ Sub (cโญ ฮ) (cโญ ฮ)
  subโญ-id : โ{ฮ ฮฆ} โ {ฮณ : AbsSub ฮฆ (cโญ ฮ)} โ subโญ id ฮฆ ฮณ โก ฮณ
  subโญ-โ : โ{ฮ ฮ ฮ ฮฆ} โ {ฯ : Sub ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ {ฮธ : AbsSub ฮฆ (cโญ ฮ)}
    โ (subโญ ฯ) ฮฆ (subโญ ฯ ฮฆ ฮธ) โก subโญ (ฯ โ ฯ) ฮฆ ฮธ 
  cฮบ-nat : โ{ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ โ{ฮฆ} โ {ฮด : AbsSub ฮฆ (cโญ ฮ)} โ cฮบ ฮฆ (subโญ ฯ ฮฆ ฮด) โก ฯ ฮฆ (cฮบ ฮฆ ฮด)
{-# REWRITE subโญ-id #-}
{-# REWRITE subโญ-โ #-}
--{-# REWRITE cฮบ-nat #-}

--=====================================
--Universe
--=====================================

postulate
  ATU : (n : โ) โ โ{ฮฆ} โ AbsTy ฮฆ

TU : (ฮ : Ctx) โ (n : โ) โ Ty ฮ
TU ฮ n ฮฆ ฮณ = ATU n
TU[] : โ{n ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ TU ฮ n T[ ฯ ] โก TU ฮ n
TU[] = refl


postulate
  tX : Var
  TEl0 : โ{n} โ Ty (โข โ tX โ TU โข n ^ #)
--  ATEl : โ{ฮฆ n} โ AbsTm ฮฆ (ATU n) โญ โ AbsTy ฮฆ

TEl : โ{n ฮ} โ (tA : ฮ โข TU ฮ n ^ โญ) โ Ty ฮ
TEl {n}{ฮ} tA ฮฆ ฮณ = (TEl0 T[ sub# ((ฮป ฮจ ฮณ' โ โข) โ TU โข n ^ โญ โ tA / tX) ]) ฮฆ ฮณ
--TEl : โ{n ฮ} โ (tA : cโญ ฮ โข TU (cโญ ฮ) n ^ โญ) โ Ty ฮ
--TEl {n}{ฮ} tA ฮฆ ฮณ = ATEl (tA ฮฆ {!!})

TEl[] : โ{n ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ {tA : ฮ โข TU ฮ n ^ โญ} โ (TEl tA) T[ ฯ ] โก TEl (TU ฮ n โ tA [ ฯ ])
TEl[] {n}{ฮ}{ฮ}{ฯ}{tA} = funext (ฮป ฮฆ โ funext (ฮป ฮด โ mapโก (TEl0 ฮฆ) (
    begin
      sub# (sub# (ฮป ฮฆโ ฮดโ โ โข โ (ฮป ฮฆโ ฮณ โ ATU n) ^ โญ โ tA ฮฆโ ฮดโ / tX)) ฮฆ (sub# ฯ ฮฆ ฮด)
    โกโจ mapโก (ฮป ฯ โ ฯ ฮฆ (sub# ฯ ฮฆ ฮด)) (sub## {_}{_}{ฮป ฮฆโ ฮดโ โ โข โ (ฮป ฮฆโ ฮณ โ ATU n) ^ โญ โ tA ฮฆโ ฮดโ / tX}) โฉ
      sub# (ฮป ฮฆโ ฮธ โ โข โ (ฮป ฮฆโ ฮณ โ ATU n) ^ โญ โ tA ฮฆโ (ฯ ฮฆโ ฮธ) / tX) ฮฆ ฮด
    โกโจ symโก (mapโก (ฮป ฯ โ ฯ ฮฆ ฮด) (sub## {_}{_} {ฮป ฮฆโ ฮดโ โ โข โ (ฮป ฮฆโ ฮณ โ ATU n) ^ โญ โ tA ฮฆโ (ฯ ฮฆโ ฮดโ) / tX})) โฉ
      sub# (sub# (ฮป ฮฆโ ฮดโ โ โข โ (ฮป ฮฆโ ฮณ โ ATU n) ^ โญ โ tA ฮฆโ (ฯ ฮฆโ ฮดโ) / tX)) ฮฆ ฮด
    โ
  )))
--THIS SHOULDN'T BE NECESSARY 

{-
TEl : โ{n ฮ} โ (tA : cโญ ฮ โข TU (cโญ ฮ) n ^ โญ) โ Ty ฮ
TEl {n}{ฮ} tA ฮฆ ฮณ = (TEl0 T[ sub# ((ฮป ฮจ ฮณ' โ โข) โ TU โข n ^ โญ โ tA / tX) ]) ฮฆ ฮณ
--TEl : โ{n ฮ} โ (tA : cโญ ฮ โข TU (cโญ ฮ) n ^ โญ) โ Ty ฮ
--TEl {n}{ฮ} tA ฮฆ ฮณ = ATEl (tA ฮฆ {!!})

TEl[] : โ{n ฮ ฮ} โ {ฯ : Sub ฮ ฮ} โ {tA : cโญ ฮ โข TU (cโญ ฮ) n ^ โญ} โ (TEl tA) T[ ฯ ] โก TEl (TU (cโญ ฮ) n โ tA [ subโญ ฯ ])
TEl[] = {!!}
-}
